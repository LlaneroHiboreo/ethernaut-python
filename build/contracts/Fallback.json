{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/ethernaut_fallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/ethernaut_fallback.sol",
    "exportedSymbols": {
      "Fallback": [
        125
      ]
    },
    "id": 126,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Fallback",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 125,
        "linearizedBaseContracts": [
          125
        ],
        "name": "Fallback",
        "nameLocation": "66:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "42e94c90",
            "id": 5,
            "mutability": "mutable",
            "name": "contributions",
            "nameLocation": "178:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "143:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "151:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "143:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "162:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 7,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "250:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 125,
            "src": "235:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "276:127:1",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "286:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "294:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "298:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "294:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "286:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "286:18:1"
                },
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "353:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18,
                      "indexExpression": {
                        "expression": {
                          "id": 16,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "367:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "371:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "367:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "353:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_20000000000000000000_by_1",
                        "typeString": "int_const 20000000000000000000"
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3230",
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "381:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "31",
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "387:7:1",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "id": 21,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "386:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "381:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20000000000000000000_by_1",
                        "typeString": "int_const 20000000000000000000"
                      }
                    },
                    "src": "353:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "353:42:1"
                }
              ]
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:2:1"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:1"
            },
            "scope": 125,
            "src": "262:141:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "430:83:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "448:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "452:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "448:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 31,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "462:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "448:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "469:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                          "typeString": "literal_string \"caller is not the owner\""
                        },
                        "value": "caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                          "typeString": "literal_string \"caller is not the owner\""
                        }
                      ],
                      "id": 28,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "440:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "440:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "440:55:1"
                },
                {
                  "id": 36,
                  "nodeType": "PlaceholderStatement",
                  "src": "505:1:1"
                }
              ]
            },
            "id": 38,
            "name": "onlyOwner",
            "nameLocation": "418:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:1"
            },
            "src": "409:104:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "586:334:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 42,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "604:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "608:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "604:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "302e303031",
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "616:11:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "0.001"
                        },
                        "src": "604:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "596:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "596:32:1"
                },
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 48,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "659:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51,
                      "indexExpression": {
                        "expression": {
                          "id": 49,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "673:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "677:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "673:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "659:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "688:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "692:5:1",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "688:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "659:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "659:38:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 56,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "776:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 59,
                      "indexExpression": {
                        "expression": {
                          "id": 57,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "790:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "794:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "790:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "776:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 60,
                        "name": "contributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "804:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "id": 61,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "818:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "804:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "776:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70,
                  "nodeType": "IfStatement",
                  "src": "772:142:1",
                  "trueBody": {
                    "id": 69,
                    "nodeType": "Block",
                    "src": "826:88:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 64,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "840:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 65,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "848:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "852:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "848:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "840:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68,
                        "nodeType": "ExpressionStatement",
                        "src": "840:18:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "d7bb99ba",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nameLocation": "558:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:2:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:0:1"
            },
            "scope": 125,
            "src": "549:371:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "983:49:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 77,
                      "name": "contributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1000:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "expression": {
                        "id": 78,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1014:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1018:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1014:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1000:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 76,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "993:32:1"
                }
              ]
            },
            "functionSelector": "f10fdf5c",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContribution",
            "nameLocation": "935:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "950:2:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "974:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:9:1"
            },
            "scope": 125,
            "src": "926:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1075:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 95,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1117:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Fallback_$125",
                                "typeString": "contract Fallback"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Fallback_$125",
                                "typeString": "contract Fallback"
                              }
                            ],
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1109:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 93,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1109:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1109:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1123:7:1",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1109:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 90,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1093:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1085:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 88,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1085:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1085:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1100:8:1",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1085:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:46:1"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1065:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38,
                  "src": "1065:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1065:9:1"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1047:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:2:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:1"
            },
            "scope": 125,
            "src": "1038:100:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1213:134:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 105,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1231:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1235:5:1",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1231:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1243:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1231:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 109,
                              "name": "contributions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "1248:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 112,
                            "indexExpression": {
                              "expression": {
                                "id": 110,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1262:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1266:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1262:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1248:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1276:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1248:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1231:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1223:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:55:1"
                },
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1322:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1330:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1334:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1330:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1322:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:18:1"
                }
              ]
            },
            "id": 124,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:2:1"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1213:0:1"
            },
            "scope": 125,
            "src": "1186:161:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 126,
        "src": "57:1292:1",
        "usedErrors": []
      }
    ],
    "src": "32:1318:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50600180546001600160a01b0319163390811790915560009081526020819052604090206801158e460913d0000090556102ea8061004f6000396000f3fe60806040526004361061004e5760003560e01c80633ccfd60b1461009657806342e94c90146100ad5780638da5cb5b146100ed578063d7bb99ba14610125578063f10fdf5c1461012d57600080fd5b366100915760003411801561007157503360009081526020819052604090205415155b61007a57600080fd5b600180546001600160a01b03191633908117909155005b600080fd5b3480156100a257600080fd5b506100ab61014f565b005b3480156100b957600080fd5b506100da6100c836600461025d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5060015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100e4565b6100ab6101e9565b34801561013957600080fd5b50336000908152602081905260409020546100da565b6001546001600160a01b031633146101ad5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640160405180910390fd5b6001546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101e6573d6000803e3d6000fd5b50565b66038d7ea4c6800034106101fc57600080fd5b336000908152602081905260408120805434929061021b90849061028d565b90915550506001546001600160a01b031660009081526020819052604080822054338352912054111561025b57600180546001600160a01b031916331790555b565b60006020828403121561026f57600080fd5b81356001600160a01b038116811461028657600080fd5b9392505050565b808201808211156102ae57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209dbfdac921639bd102db6cad7cc7f63ac74d5df6cae06cf85ed4ed292358193464736f6c63430008110033",
  "bytecodeSha1": "bc1f88d3795feeab29689ee77148889c827d3ea0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "Fallback",
  "coverageMap": {
    "branches": {
      "1": {
        "Fallback.<receive>": {
          "7": [
            1231,
            1244,
            false
          ],
          "8": [
            1248,
            1277,
            true
          ]
        },
        "Fallback.contribute": {
          "9": [
            604,
            627,
            true
          ],
          "10": [
            776,
            824,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Fallback.<receive>": {
          "0": [
            1223,
            1278
          ],
          "1": [
            1322,
            1340
          ]
        },
        "Fallback.contribute": {
          "4": [
            596,
            628
          ],
          "5": [
            659,
            697
          ],
          "6": [
            840,
            858
          ]
        },
        "Fallback.getContribution": {
          "2": [
            993,
            1025
          ]
        },
        "Fallback.withdraw": {
          "3": [
            1085,
            1131
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061004e5760003560e01c80633ccfd60b1461009657806342e94c90146100ad5780638da5cb5b146100ed578063d7bb99ba14610125578063f10fdf5c1461012d57600080fd5b366100915760003411801561007157503360009081526020819052604090205415155b61007a57600080fd5b600180546001600160a01b03191633908117909155005b600080fd5b3480156100a257600080fd5b506100ab61014f565b005b3480156100b957600080fd5b506100da6100c836600461025d565b60006020819052908152604090205481565b6040519081526020015b60405180910390f35b3480156100f957600080fd5b5060015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100e4565b6100ab6101e9565b34801561013957600080fd5b50336000908152602081905260409020546100da565b6001546001600160a01b031633146101ad5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640160405180910390fd5b6001546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156101e6573d6000803e3d6000fd5b50565b66038d7ea4c6800034106101fc57600080fd5b336000908152602081905260408120805434929061021b90849061028d565b90915550506001546001600160a01b031660009081526020819052604080822054338352912054111561025b57600180546001600160a01b031916331790555b565b60006020828403121561026f57600080fd5b81356001600160a01b038116811461028657600080fd5b9392505050565b808201808211156102ae57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212209dbfdac921639bd102db6cad7cc7f63ac74d5df6cae06cf85ed4ed292358193464736f6c63430008110033",
  "deployedSourceMap": "57:1292:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:1;1231:9;:13;:46;;;;-1:-1:-1;1262:10:1;1276:1;1248:25;;;;;;;;;;;:29;;1231:46;1223:55;;;;;;1322:5;:18;;-1:-1:-1;;;;;;1322:18:1;1330:10;1322:18;;;;;;;57:1292;;;;1038:100;;;;;;;;;;;;;:::i;:::-;;143:48;;;;;;;;;;-1:-1:-1;143:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;451:25:3;;;439:2;424:18;143:48:1;;;;;;;;235:20;;;;;;;;;;-1:-1:-1;235:20:1;;;;-1:-1:-1;;;;;235:20:1;;;;;;-1:-1:-1;;;;;651:32:3;;;633:51;;621:2;606:18;235:20:1;487:203:3;549:371:1;;;:::i;926:106::-;;;;;;;;;;-1:-1:-1;1014:10:1;974:7;1000:25;;;;;;;;;;;926:106;;1038:100;462:5;;-1:-1:-1;;;;;462:5:1;448:10;:19;440:55;;;;-1:-1:-1;;;440:55:1;;897:2:3;440:55:1;;;879:21:3;936:2;916:18;;;909:30;975:25;955:18;;;948:53;1018:18;;440:55:1;;;;;;;;1093:5:::1;::::0;1085:46:::1;::::0;-1:-1:-1;;;;;1093:5:1;;::::1;::::0;1109:21:::1;1085:46:::0;::::1;;;::::0;1093:5:::1;1085:46:::0;1093:5;1085:46;1109:21;1093:5;1085:46;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1038:100::o:0;549:371::-;616:11;604:9;:23;596:32;;;;;;673:10;659:13;:25;;;;;;;;;;:38;;688:9;;659:13;:38;;688:9;;659:38;:::i;:::-;;;;-1:-1:-1;;818:5:1;;-1:-1:-1;;;;;818:5:1;804:13;:20;;;;;;;;;;;;790:10;776:25;;;;;:48;772:142;;;840:5;:18;;-1:-1:-1;;;;;;840:18:1;848:10;840:18;;;772:142;549:371::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;1047:222::-;1112:9;;;1133:10;;;1130:133;;;1185:10;1180:3;1176:20;1173:1;1166:31;1220:4;1217:1;1210:15;1248:4;1245:1;1238:15;1130:133;1047:222;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    1349
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xD7BB99BA EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xF10FDF5C EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI PUSH1 0x0 CALLVALUE GT DUP1 ISZERO PUSH2 0x71 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x21B SWAP1 DUP5 SWAP1 PUSH2 0x28D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD CALLER DUP4 MSTORE SWAP2 KECCAK256 SLOAD GT ISZERO PUSH2 0x25B JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xBF 0xDA 0xC9 0x21 PUSH4 0x9BD102DB PUSH13 0xAD7CC7F63AC74D5DF6CAE06CF8 0x5E 0xD4 0xED 0x29 0x23 PC NOT CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42E94C90"
    },
    "36": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "40": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED"
    },
    "51": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD7BB99BA"
    },
    "58": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125"
    },
    "62": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF10FDF5C"
    },
    "69": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D"
    },
    "73": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "REVERT",
      "path": "1"
    },
    "78": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "79": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "80": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x91"
    },
    "83": {
      "fn": null,
      "offset": [
        57,
        1349
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "84": {
      "fn": "Fallback.<receive>",
      "offset": [
        1243,
        1244
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x0"
    },
    "86": {
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1240
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "87": {
      "branch": 7,
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1244
      ],
      "op": "GT",
      "path": "1"
    },
    "88": {
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1277
      ],
      "op": "DUP1",
      "path": "1"
    },
    "89": {
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1277
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "90": {
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1277
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "93": {
      "branch": 7,
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1277
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "94": {
      "op": "POP"
    },
    "95": {
      "fn": "Fallback.<receive>",
      "offset": [
        1262,
        1272
      ],
      "op": "CALLER",
      "path": "1"
    },
    "96": {
      "fn": "Fallback.<receive>",
      "offset": [
        1276,
        1277
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "98": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "99": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "100": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "101": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "103": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "104": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "105": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "106": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "108": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "109": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "110": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1273
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "111": {
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1277
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "112": {
      "branch": 8,
      "fn": "Fallback.<receive>",
      "offset": [
        1248,
        1277
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "113": {
      "fn": "Fallback.<receive>",
      "offset": [
        1231,
        1277
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "117": {
      "branch": 8,
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "118": {
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "120": {
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "DUP1",
      "path": "1"
    },
    "121": {
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "REVERT",
      "path": "1"
    },
    "122": {
      "fn": "Fallback.<receive>",
      "offset": [
        1223,
        1278
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "123": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1327
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x1"
    },
    "125": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "133": {
      "op": "SHL"
    },
    "134": {
      "op": "SUB"
    },
    "135": {
      "op": "NOT"
    },
    "136": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "AND",
      "path": "1"
    },
    "137": {
      "fn": "Fallback.<receive>",
      "offset": [
        1330,
        1340
      ],
      "op": "CALLER",
      "path": "1"
    },
    "138": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "139": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "140": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "OR",
      "path": "1"
    },
    "141": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "142": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "143": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "144": {
      "fn": "Fallback.<receive>",
      "offset": [
        1322,
        1340
      ],
      "op": "STOP",
      "path": "1"
    },
    "145": {
      "offset": [
        57,
        1349
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "146": {
      "fn": "Fallback.<receive>",
      "offset": [
        57,
        1349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "148": {
      "fn": "Fallback.<receive>",
      "offset": [
        57,
        1349
      ],
      "op": "DUP1",
      "path": "1"
    },
    "149": {
      "first_revert": true,
      "fn": "Fallback.<receive>",
      "offset": [
        57,
        1349
      ],
      "op": "REVERT",
      "path": "1"
    },
    "150": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "151": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "152": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "154": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "157": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "160": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "DUP1",
      "path": "1"
    },
    "161": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "REVERT",
      "path": "1"
    },
    "162": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "POP",
      "path": "1"
    },
    "164": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "167": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "170": {
      "fn": "Fallback.withdraw",
      "jump": "i",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMP",
      "path": "1"
    },
    "171": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "172": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "STOP",
      "path": "1"
    },
    "173": {
      "offset": [
        143,
        191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "174": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "175": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "176": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "177": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9"
    },
    "180": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "181": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "183": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "REVERT",
      "path": "1"
    },
    "185": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "186": {
      "op": "POP"
    },
    "187": {
      "offset": [
        143,
        191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA"
    },
    "190": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8"
    },
    "193": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "194": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "196": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25D"
    },
    "199": {
      "fn": "Fallback.withdraw",
      "jump": "i",
      "offset": [
        143,
        191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "200": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "201": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "203": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "205": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "206": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "207": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "208": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "209": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "210": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "211": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "213": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "214": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "215": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "216": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "217": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "218": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "219": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "221": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "222": {
      "op": "SWAP1"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "MSTORE"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "offset": [
        143,
        191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "229": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "231": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "232": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "DUP1",
      "path": "1"
    },
    "233": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "234": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SUB",
      "path": "1"
    },
    "235": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "236": {
      "fn": "Fallback.withdraw",
      "offset": [
        143,
        191
      ],
      "op": "RETURN",
      "path": "1"
    },
    "237": {
      "offset": [
        235,
        255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "238": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "239": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "DUP1",
      "path": "1"
    },
    "240": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "241": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF9"
    },
    "244": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "245": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "247": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "REVERT",
      "path": "1"
    },
    "249": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "250": {
      "op": "POP"
    },
    "251": {
      "offset": [
        235,
        255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "253": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "254": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D"
    },
    "257": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "264": {
      "op": "SHL"
    },
    "265": {
      "op": "SUB"
    },
    "266": {
      "offset": [
        235,
        255
      ],
      "op": "AND",
      "path": "1"
    },
    "267": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "DUP2",
      "path": "1"
    },
    "268": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "269": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "270": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "272": {
      "fn": "Fallback.withdraw",
      "offset": [
        235,
        255
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "op": "SWAP1"
    },
    "282": {
      "op": "SWAP2"
    },
    "283": {
      "op": "AND"
    },
    "284": {
      "op": "DUP2"
    },
    "285": {
      "op": "MSTORE"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "offset": [
        235,
        255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4"
    },
    "292": {
      "op": "JUMP"
    },
    "293": {
      "fn": "Fallback.contribute",
      "offset": [
        549,
        920
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "294": {
      "fn": "Fallback.contribute",
      "offset": [
        549,
        920
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "297": {
      "fn": "Fallback.contribute",
      "offset": [
        549,
        920
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9"
    },
    "300": {
      "fn": "Fallback.contribute",
      "jump": "i",
      "offset": [
        549,
        920
      ],
      "op": "JUMP",
      "path": "1"
    },
    "301": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "302": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "303": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "DUP1",
      "path": "1"
    },
    "304": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "305": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139"
    },
    "308": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "309": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "311": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "DUP1",
      "path": "1"
    },
    "312": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "REVERT",
      "path": "1"
    },
    "313": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "Fallback.getContribution",
      "offset": [
        1014,
        1024
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "316": {
      "fn": "Fallback.getContribution",
      "offset": [
        974,
        981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "318": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "319": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "320": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "321": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "323": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "324": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "325": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "326": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "328": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "329": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "330": {
      "fn": "Fallback.getContribution",
      "offset": [
        1000,
        1025
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "331": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA"
    },
    "334": {
      "fn": "Fallback.getContribution",
      "offset": [
        926,
        1032
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "Fallback.withdraw",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "offset": [
        462,
        467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "338": {
      "fn": "Fallback.withdraw",
      "offset": [
        462,
        467
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "345": {
      "op": "SHL"
    },
    "346": {
      "op": "SUB"
    },
    "347": {
      "offset": [
        462,
        467
      ],
      "op": "AND",
      "path": "1"
    },
    "348": {
      "offset": [
        448,
        458
      ],
      "op": "CALLER",
      "path": "1"
    },
    "349": {
      "offset": [
        448,
        467
      ],
      "op": "EQ",
      "path": "1"
    },
    "350": {
      "offset": [
        440,
        495
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AD"
    },
    "353": {
      "offset": [
        440,
        495
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "354": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "356": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "363": {
      "op": "SHL"
    },
    "364": {
      "offset": [
        440,
        495
      ],
      "op": "DUP2",
      "path": "1"
    },
    "365": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "offset": [
        440,
        495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "370": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "DUP3",
      "path": "1"
    },
    "371": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "ADD",
      "path": "1"
    },
    "372": {
      "op": "MSTORE"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "377": {
      "op": "DUP3"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH32",
      "value": "0x63616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "415": {
      "op": "DUP3"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "offset": [
        440,
        495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "423": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "424": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "DUP1",
      "path": "1"
    },
    "425": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "426": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "SUB",
      "path": "1"
    },
    "427": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "428": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "429": {
      "fn": "Fallback.withdraw",
      "offset": [
        440,
        495
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "430": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x1"
    },
    "432": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "433": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "435": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "445": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "446": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "AND",
      "path": "1"
    },
    "447": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "448": {
      "fn": "Fallback.withdraw",
      "offset": [
        1109,
        1130
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "449": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP1",
      "path": "1"
    },
    "450": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "451": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "454": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "MUL",
      "path": "1"
    },
    "455": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "456": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "458": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP2",
      "path": "1"
    },
    "459": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "DUP2",
      "path": "1"
    },
    "460": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP2",
      "path": "1"
    },
    "461": {
      "fn": "Fallback.withdraw",
      "offset": [
        1109,
        1130
      ],
      "op": "DUP6",
      "path": "1"
    },
    "462": {
      "fn": "Fallback.withdraw",
      "offset": [
        1093,
        1098
      ],
      "op": "DUP9",
      "path": "1"
    },
    "463": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP9",
      "path": "1"
    },
    "464": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "CALL",
      "path": "1"
    },
    "465": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "466": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "POP",
      "path": "1"
    },
    "467": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "POP",
      "path": "1"
    },
    "468": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "POP",
      "path": "1"
    },
    "469": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "POP",
      "path": "1"
    },
    "470": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "471": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP1",
      "path": "1"
    },
    "472": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "473": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E6"
    },
    "476": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "477": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "478": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "480": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "DUP1",
      "path": "1"
    },
    "481": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "482": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "483": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "485": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "REVERT",
      "path": "1"
    },
    "486": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "487": {
      "fn": "Fallback.withdraw",
      "offset": [
        1085,
        1131
      ],
      "op": "POP",
      "path": "1"
    },
    "488": {
      "fn": "Fallback.withdraw",
      "jump": "o",
      "offset": [
        1038,
        1138
      ],
      "op": "JUMP",
      "path": "1"
    },
    "489": {
      "fn": "Fallback.contribute",
      "offset": [
        549,
        920
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "490": {
      "fn": "Fallback.contribute",
      "offset": [
        616,
        627
      ],
      "op": "PUSH7",
      "path": "1",
      "statement": 4,
      "value": "0x38D7EA4C68000"
    },
    "498": {
      "fn": "Fallback.contribute",
      "offset": [
        604,
        613
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "499": {
      "branch": 9,
      "fn": "Fallback.contribute",
      "offset": [
        604,
        627
      ],
      "op": "LT",
      "path": "1"
    },
    "500": {
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC"
    },
    "503": {
      "branch": 9,
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "504": {
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "506": {
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "DUP1",
      "path": "1"
    },
    "507": {
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "REVERT",
      "path": "1"
    },
    "508": {
      "fn": "Fallback.contribute",
      "offset": [
        596,
        628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "509": {
      "fn": "Fallback.contribute",
      "offset": [
        673,
        683
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 5
    },
    "510": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        672
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "512": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "513": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "514": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "515": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "517": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "518": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "519": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "520": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "522": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "523": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "524": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "525": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "526": {
      "fn": "Fallback.contribute",
      "offset": [
        688,
        697
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "527": {
      "fn": "Fallback.contribute",
      "offset": [
        688,
        697
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "528": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        672
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "529": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B"
    },
    "532": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "533": {
      "fn": "Fallback.contribute",
      "offset": [
        688,
        697
      ],
      "op": "DUP5",
      "path": "1"
    },
    "534": {
      "fn": "Fallback.contribute",
      "offset": [
        688,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "535": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28D"
    },
    "538": {
      "fn": "Fallback.contribute",
      "jump": "i",
      "offset": [
        659,
        697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "539": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "540": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "541": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "Fallback.contribute",
      "offset": [
        659,
        697
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "fn": "Fallback.contribute",
      "offset": [
        818,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "547": {
      "fn": "Fallback.contribute",
      "offset": [
        818,
        823
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "554": {
      "op": "SHL"
    },
    "555": {
      "op": "SUB"
    },
    "556": {
      "fn": "Fallback.contribute",
      "offset": [
        818,
        823
      ],
      "op": "AND",
      "path": "1"
    },
    "557": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        817
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "559": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "560": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "DUP2",
      "path": "1"
    },
    "561": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "562": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "564": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "DUP2",
      "path": "1"
    },
    "565": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "566": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "567": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "569": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "DUP1",
      "path": "1"
    },
    "570": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "DUP3",
      "path": "1"
    },
    "571": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "572": {
      "fn": "Fallback.contribute",
      "offset": [
        804,
        824
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "573": {
      "fn": "Fallback.contribute",
      "offset": [
        790,
        800
      ],
      "op": "CALLER",
      "path": "1"
    },
    "574": {
      "fn": "Fallback.contribute",
      "offset": [
        776,
        801
      ],
      "op": "DUP4",
      "path": "1"
    },
    "575": {
      "fn": "Fallback.contribute",
      "offset": [
        776,
        801
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "576": {
      "fn": "Fallback.contribute",
      "offset": [
        776,
        801
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "577": {
      "fn": "Fallback.contribute",
      "offset": [
        776,
        801
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "578": {
      "fn": "Fallback.contribute",
      "offset": [
        776,
        801
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "579": {
      "branch": 10,
      "fn": "Fallback.contribute",
      "offset": [
        776,
        824
      ],
      "op": "GT",
      "path": "1"
    },
    "580": {
      "fn": "Fallback.contribute",
      "offset": [
        772,
        914
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "581": {
      "fn": "Fallback.contribute",
      "offset": [
        772,
        914
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25B"
    },
    "584": {
      "branch": 10,
      "fn": "Fallback.contribute",
      "offset": [
        772,
        914
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "585": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        845
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x1"
    },
    "587": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "DUP1",
      "path": "1"
    },
    "588": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "op": "NOT"
    },
    "598": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "AND",
      "path": "1"
    },
    "599": {
      "fn": "Fallback.contribute",
      "offset": [
        848,
        858
      ],
      "op": "CALLER",
      "path": "1"
    },
    "600": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "OR",
      "path": "1"
    },
    "601": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "602": {
      "fn": "Fallback.contribute",
      "offset": [
        840,
        858
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "603": {
      "fn": "Fallback.contribute",
      "offset": [
        772,
        914
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "604": {
      "fn": "Fallback.contribute",
      "jump": "o",
      "offset": [
        549,
        920
      ],
      "op": "JUMP",
      "path": "1"
    },
    "605": {
      "op": "JUMPDEST"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "610": {
      "op": "DUP3"
    },
    "611": {
      "op": "DUP5"
    },
    "612": {
      "op": "SUB"
    },
    "613": {
      "op": "SLT"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "REVERT"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "DUP2"
    },
    "625": {
      "op": "CALLDATALOAD"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "632": {
      "op": "SHL"
    },
    "633": {
      "op": "SUB"
    },
    "634": {
      "op": "DUP2"
    },
    "635": {
      "op": "AND"
    },
    "636": {
      "op": "DUP2"
    },
    "637": {
      "op": "EQ"
    },
    "638": {
      "op": "PUSH2",
      "value": "0x286"
    },
    "641": {
      "op": "JUMPI"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "644": {
      "op": "DUP1"
    },
    "645": {
      "op": "REVERT"
    },
    "646": {
      "op": "JUMPDEST"
    },
    "647": {
      "op": "SWAP4"
    },
    "648": {
      "op": "SWAP3"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "jump": "o",
      "op": "JUMP"
    },
    "653": {
      "op": "JUMPDEST"
    },
    "654": {
      "op": "DUP1"
    },
    "655": {
      "op": "DUP3"
    },
    "656": {
      "op": "ADD"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "op": "DUP3"
    },
    "659": {
      "op": "GT"
    },
    "660": {
      "op": "ISZERO"
    },
    "661": {
      "op": "PUSH2",
      "value": "0x2AE"
    },
    "664": {
      "op": "JUMPI"
    },
    "665": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "680": {
      "op": "MSTORE"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "685": {
      "op": "REVERT"
    },
    "686": {
      "op": "JUMPDEST"
    },
    "687": {
      "op": "SWAP3"
    },
    "688": {
      "op": "SWAP2"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a2fb1b1d04d7003cd291bade70de49402cbc14bc",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Fallback {\n    // mapping to keep track of user and correspondent amount\n    mapping(address => uint256) public contributions;\n    // OWNER variable of the contract\n    address public owner;\n\n    constructor() {\n        owner = msg.sender; // First owner is deployer of contract\n        contributions[msg.sender] = 20 * (1 ether); \n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"caller is not the owner\");\n        _;\n    }\n\n    // Function to contribute\n    function contribute() public payable {\n        require(msg.value < 0.001 ether); // fee to contribute\n        contributions[msg.sender] += msg.value; // update contribution of user\n        // CHANGE OF OWNERSHIP //\n        if (contributions[msg.sender] > contributions[owner]) {\n            owner = msg.sender; // New owner will be the maximum contributor\n        }\n    }\n\n    function getContribution() public view returns (uint256) {\n        return contributions[msg.sender];\n    }\n\n    function withdraw() public onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n    // send ether to contract and be owner\n    receive() external payable {\n        require(msg.value > 0 && contributions[msg.sender] > 0);\n        // CHANGE OF OWNERSHIP //\n        owner = msg.sender;\n    }\n}\n",
  "sourceMap": "57:1292:1:-:0;;;262:141;;;;;;;;;-1:-1:-1;286:5:1;:18;;-1:-1:-1;;;;;;286:18:1;294:10;286:18;;;;;;:5;353:25;;;;;;;;;;381:14;353:42;;57:1292;;;;;;",
  "sourcePath": "contracts/ethernaut_fallback.sol",
  "type": "contract"
}